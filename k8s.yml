apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: raft-json-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/from-to-www-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: "raft-json.svc.k8s.rsmith.co"
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: raft-json-service
              port:
                number: 3000
---
kind: Service
apiVersion: v1
metadata:
  name: raft-json-service
spec:
  selector:
    app: raft-json
  ports:
  - name: http
    port: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: raft-json
spec:
  replicas: 5
  selector:
    matchLabels:
      app: raft-json
  template:
    metadata:
      labels:
        app: raft-json
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - raft-json
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: raft-json
        image: ghcr.io/ukd1/raft-for-beginners-too-json-server:latest
        resources:
          limits:
            memory: "64Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 15
      terminationGracePeriodSeconds: 15
